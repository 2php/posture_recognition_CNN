2018-03-09：验证了CONV指令的正确性，增加TRAN函数
	1. CONV指令，和double双精度浮点数的相对误差为1e-5数量级
	2. POOL指令，average的pooling误差为0%；max-pooling的误差为0%
	3. 还有MULT矩阵乘法指令的验证
	3. 增加了TRAN矩阵转置的函数，后续为了优化MULT的时序，
		可以考虑增加TRAN_MULT指令，先转置，然后矩阵乘法（连续地址读取DDR很快）
		
2018-03-09: 为了防止综合，看看整个系统的资源消耗，发现CNN模块的资源占用如下：
	1. ALM：3631.8
	2. M10K：19
	3. DSP：46
	4. Fmax：54.67 MHz
	
2018-03-10: 为了证明CNN指令集架构计算的正确性，写了相应的python/matlab代码
	建立了一套验证平台，由python产生测试向量（初始化SSRAM），
	经过Modelsim仿真后，产生的运算结果写入到txt文件中
	在matlab里面比对python给出的正确结果和verilog运算的结果
	
2018-03-13: 修正了CNN的指令集架构，使得运算结果回写DDR的时候速度提升100%
	1. 这样，算上DDR数据读取，整体的DDR读写带宽速度提升了50%
	2. CNN指令单步运算的$3回写都改成是按行【优先】存储
	3. 另外，综合下来，资源和时序都优化了不少
	ALM: 3487.9
	M10K: 25
	DSP: 42
	Fmax : 71.21 MHz